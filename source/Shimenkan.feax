@MARKTONES = [u16F91 u16F92];
@VOWELS = @cno_mark;
@VOWEL_DESC = [u16F5F.mark u16F63.mark u16F64.mark u16F69.mark];
@VOWEL_TALL = [u16F5B u16F5C u16F5E u16F5F u16F60 u16F73 u16F74 u16F7D u16F7E u16F7F u16F80 u16F85];
@ASPMARKS = [u16F51.mark u16F52.mark];
@ASPALLMARKS = [@ASPMARKS u16F53.mark];
@ASP = [u16F51 u16F52];
@ASPALL = [@ASP u16F53];

@L_4F = [u16F0E_u16F4F u16F10_u16F4F];
@L_no4F = [u16F0E u16F10];

lookup vowel_marks {
    sub @cno_mark by @c_mark;
} vowel_marks;

lookup asp_marks {
    sub @ASP by @ASPMARKS;
    sub u16F53 by u16F53.mark;
} asp_marks;

lookup asp_vowel_vowel {
    sub u16F51 @cno_mark by @c_mark;
    sub u16F52 @cno_mark by @c_mark;
    sub u16F53 @cno_mark by @c_mark;
} asp_vowel_vowel;

lookup asp_tone_asp {
    sub u16F51 @MARKTONES by u16F51;
    sub u16F52 @MARKTONES by u16F52;
    sub u16F53 @MARKTONES by u16F53;
} asp_tone_asp;

lookup tone_t_asp1_t {
    sub u16F91 by u16F91 u16F51 u16F91;
    sub u16F92 by u16F92 u16F51 u16F92;
} tone_t_asp1_t;

lookup tone_t_asp2_t {
    sub u16F91 by u16F91 u16F52 u16F91;
    sub u16F92 by u16F92 u16F52 u16F92;
} tone_t_asp2_t;

lookup tone_t_asp3_t {
    sub u16F91 by u16F91 u16F53 u16F91;
    sub u16F92 by u16F92 u16F53 u16F92;
} tone_t_asp3_t;

lookup lig_4F {
    sub @L_no4F u16F4F by @L_4F;
} lig_4F;

do  let c = feaclass("W");
    let subc = filter(lambda g: int(re.sub(r"^u([0-9a-fA-F]+)([._].*)?$", r"\1", g), 16) < 0x16F51, c);
    let l = " ".join(subc);
    { @Cons = [ $l ]; }


# Break after tone. There are two cursive attachment behaviours. In the first you
# mark the first base and it attaches forward. In the second you apply the lookup to
# the second and it attaches back to the first. If a type 2 lookup reference is executed
# in a type 1 machine, then a future character may be pulled in to attach to us, rather
# than we attach to something else. We insert a block to stop this.
@NonAttaches = [u16F50 u16F8F u16F90 u16F91 u16F92];
lookup block_W {
    sub @NonAttaches by @NonAttaches ZWNBS;
} block_W;

lookup block_W_context {
    sub @NonAttaches' lookup block_W @Cons;
} block_W_context;

lookup choose_vowel_marks_sfm {
    # ASP is spacing for shoulder
    ignore sub @ASP' @cno_mark @cno_mark @cno_mark u16F90;
    ignore sub @ASP' @cno_mark @cno_mark u16F90;
    ignore sub @ASP' @cno_mark u16F90;
    ignore sub @ASP' @cno_mark @cno_mark @cno_mark u16F8F;
    ignore sub @ASP' @cno_mark @cno_mark u16F8F;
    ignore sub @ASP' @cno_mark u16F8F;
    ignore sub u16F52' @cno_mark u16F92;
    ignore sub u16F52' @cno_mark @cno_mark u16F92;
    ignore sub u16F52' @cno_mark @cno_mark @cno_mark u16F92;
    # ASP is spacing and comes after mark vowels
    sub u16F51' lookup asp_vowel_vowel @cno_mark' lookup vowel_marks @cno_mark' lookup vowel_marks @cno_mark' lookup tone_t_asp1_t u16F91' lookup asp_tone_asp;
    sub u16F51' lookup asp_vowel_vowel @cno_mark' lookup vowel_marks @cno_mark' lookup tone_t_asp1_t u16F91' lookup asp_tone_asp;
    sub u16F51' lookup asp_vowel_vowel @cno_mark' lookup tone_t_asp1_t u16F91' lookup asp_tone_asp;
    sub u16F52' lookup asp_vowel_vowel @cno_mark' lookup vowel_marks @cno_mark' lookup vowel_marks @cno_mark' lookup tone_t_asp2_t u16F91' lookup asp_tone_asp;
    sub u16F52' lookup asp_vowel_vowel @cno_mark' lookup vowel_marks @cno_mark' lookup tone_t_asp2_t u16F91' lookup asp_tone_asp;
    sub u16F52' lookup asp_vowel_vowel @cno_mark' lookup tone_t_asp2_t u16F91' lookup asp_tone_asp;
    sub u16F53' lookup asp_vowel_vowel @cno_mark' lookup vowel_marks @cno_mark' lookup vowel_marks @cno_mark' lookup tone_t_asp3_t u16F91' lookup asp_tone_asp;
    sub u16F53' lookup asp_vowel_vowel @cno_mark' lookup vowel_marks @cno_mark' lookup tone_t_asp3_t u16F91' lookup asp_tone_asp;
    sub u16F53' lookup asp_vowel_vowel @cno_mark' lookup tone_t_asp3_t u16F91' lookup asp_tone_asp;
    # ASP if followed by a vowel is a mark
    sub @ASP' lookup asp_marks @cno_mark;
    sub u16F53' lookup asp_marks @cno_mark @cno_mark @cno_mark [u16F8F u16F90];
    sub u16F53' lookup asp_marks @cno_mark @cno_mark [u16F8F u16F90];
    sub u16F53' lookup asp_marks @cno_mark [u16F8F u16F90];
    # normal vowel mark replacement
    sub @cno_mark' lookup vowel_marks @cno_mark' lookup vowel_marks @cno_mark' lookup vowel_marks u16F91;
    sub @cno_mark' lookup vowel_marks @cno_mark' lookup vowel_marks u16F91;
    sub @cno_mark' lookup vowel_marks u16F91;
} choose_vowel_marks_sfm;

lookup choose_vowel_marks {
    # ASP is spacing for shoulder
    ignore sub @ASP' @cno_mark @cno_mark @cno_mark u16F90;
    ignore sub @ASP' @cno_mark @cno_mark u16F90;
    ignore sub @ASP' @cno_mark u16F90;
    ignore sub @ASP' @VOWEL_TALL @cno_mark @cno_mark u16F8F;
    ignore sub @ASP' @VOWEL_TALL @cno_mark u16F8F;
    ignore sub @ASP' @VOWEL_TALL u16F8F;
    # ASP is spacing and comes after mark vowels
    sub u16F51' lookup asp_vowel_vowel @cno_mark' lookup vowel_marks @cno_mark' lookup vowel_marks @cno_mark' lookup tone_t_asp1_t @MARKTONES' lookup asp_tone_asp;
    sub u16F51' lookup asp_vowel_vowel @cno_mark' lookup vowel_marks @cno_mark' lookup tone_t_asp1_t @MARKTONES' lookup asp_tone_asp;
    sub u16F51' lookup asp_vowel_vowel @cno_mark' lookup tone_t_asp1_t @MARKTONES' lookup asp_tone_asp;
    sub u16F52' lookup asp_vowel_vowel @cno_mark' lookup vowel_marks @cno_mark' lookup vowel_marks @cno_mark' lookup tone_t_asp2_t @MARKTONES' lookup asp_tone_asp;
    sub u16F52' lookup asp_vowel_vowel @cno_mark' lookup vowel_marks @cno_mark' lookup tone_t_asp2_t @MARKTONES' lookup asp_tone_asp;
    sub u16F52' lookup asp_vowel_vowel @cno_mark' lookup tone_t_asp2_t @MARKTONES' lookup asp_tone_asp;
    sub u16F53' lookup asp_vowel_vowel @cno_mark' lookup vowel_marks @cno_mark' lookup vowel_marks @cno_mark' lookup tone_t_asp3_t @MARKTONES' lookup asp_tone_asp;
    sub u16F53' lookup asp_vowel_vowel @cno_mark' lookup vowel_marks @cno_mark' lookup tone_t_asp3_t @MARKTONES' lookup asp_tone_asp;
    sub u16F53' lookup asp_vowel_vowel @cno_mark' lookup tone_t_asp3_t @MARKTONES' lookup asp_tone_asp;
    # ASP if followed by a vowel is a mark
    sub @ASP' lookup asp_marks @cno_mark;
    sub u16F53' lookup asp_marks @cno_mark @cno_mark @cno_mark [u16F8F u16F90];
    sub u16F53' lookup asp_marks @cno_mark @cno_mark [u16F8F u16F90];
    sub u16F53' lookup asp_marks @cno_mark [u16F8F u16F90];
    # normal vowel mark replacement
    sub @cno_mark' lookup vowel_marks @cno_mark' lookup vowel_marks @cno_mark' lookup vowel_marks @MARKTONES;
    sub @cno_mark' lookup vowel_marks @cno_mark' lookup vowel_marks @MARKTONES;
    sub @cno_mark' lookup vowel_marks @MARKTONES;
} choose_vowel_marks;

# While block_W_context stops most inadvertant attachments, we still need to handle
# where there is no tone mark. For this we could simply put a zwsp before every consonant
# But then we fall foul of the ligature problem and can't attach to the second in a
# one to many replacement.

@preCons = [@WB u16F51 u16F52];
lookup insert_zwsp {
    sub @preCons by @preCons ZWNBS;
} insert_zwsp;

lookup block_cursive {
    ignore sub ZWNBS @Cons;
    sub @preCons' lookup insert_zwsp @Cons;
} block_cursive;

do  for l = [ygp ywqa narrow hmdd flat point open lpo dot];
    let n = "@cno_" + l;
    let c = "@c_" + l;
    let l = "lig_" + l;
    {
lookup $l {
    sub $n by $c;
} $l;
    }

lookup left_asp_ma {
    sub u16F04 u16F51 by u16F04_u16F51;
} left_asp_ma;

lookup left_asp_na {
    sub u16F10 u16F51 by u16F10_u16F51;
} left_asp_na;

lookup left_asp_nga {
    sub u16F23 u16F51 by u16F23_u16F51;
} left_asp_nga;

languagesystem DFLT dflt;
languagesystem DFLT HMD;
languagesystem DFLT HMDD;
languagesystem DFLT HMZ;
languagesystem DFLT LPO;
languagesystem DFLT SFM;
languagesystem DFLT YGP;
languagesystem DFLT YWQA;
languagesystem DFLT YWQB;

feature clig {
        lookup lig_4F;
        lookup choose_vowel_marks;
        lookup block_W_context;
        lookup block_cursive;
    language SFM exclude_dflt;
        lookup lig_4F;
        lookup choose_vowel_marks_sfm;
        lookup block_W_context;
        lookup block_cursive;
} clig;

feature locl {
  script DFLT;
    language dflt;
    language YGP exclude_dflt;
        lookup lig_ygp;
        lookup lig_narrow;
    language SFM exclude_dflt;
        lookup lig_point;
        lookup left_asp_ma;
        lookup left_asp_na;
    language HMZ exclude_dflt;
        lookup lig_point;
        lookup left_asp_ma;
        lookup left_asp_na;
        lookup left_asp_nga;
        lookup lig_open;
    language YWQA exclude_dflt;
        lookup lig_narrow;
        lookup lig_flat;
        lookup lig_ywqa;
    language HMD exclude_dflt;
        lookup lig_open;
        lookup lig_point;
        lookup left_asp_na;
    language LPO exclude_dflt;
        lookup lig_lpo;
        lookup lig_flat;
        lookup lig_open;
    language YWQB exclude_dflt;
        lookup lig_narrow;
        lookup lig_flat;
    language HMDD exclude_dflt;
        lookup lig_hmdd;
        lookup lig_dot;
        lookup lig_open;
        lookup lig_point;
} locl;

######################
# Attaching
######################

do  for a = [EW KW FF SS WW];
    let n = "cursive_attach_" + a[0];
    let b = "@" + a[1] + "B";
    let c = "@" + a[0];
    {
        lookup $n {
            lookupflag IgnoreMarks;
            pos cursive $b $c;
        } $n;
    }

lookup asp_attach {
    pos base @S mark @_SB;
} asp_attach;

lookup attach_F {
    pos base @F mark @_F;
} attach_F;

lookup attach_head {
    pos base @H mark @_H;
} attach_head;

lookup attach_head_D {
    pos base @HD mark @_HD;
} attach_head_D;

lookup attach_head_L {
    pos base @H mark @_HR;
} attach_head_L;

lookup attach_vowel_HR {
    pos mark @_HL mark @_HR;
} attach_vowel_HR;  

lookup attach_vowel_HL {
    pos mark @_HR mark @_HL;
} attach_vowel_HL;

lookup attach_foot {
    pos base @L mark @_L;
} attach_foot;

lookup attach_foot_L {
    pos base @L mark @_LR;
} attach_foot_L;

lookup attach_vowel_LL {
    pos mark @_LR mark @_LL;
} attach_vowel_LL;

do  let a = -int(ADVx("u16F61") / 2);
    {
        lookup left_shift_vowel {
            pos @_H <$a 0 0 0>;
        } left_shift_vowel;
    }

lookup advance_base {
do  for g = @H;
    let a = APx(g, "H") - ADVx(g) + int(1.5 * ADVx("u16F61"));
    let b = int(1.5 * ADVx("u16F61")) - APx(g, "H");
    let c = a + b;
    if b > 0 and c > 0;
    {
        pos $g <$b 0 $c 0>;
    }
} advance_base;

lookup vowel_attach {
    pos @W' lookup cursive_attach_W @WB' lookup cursive_attach_W @WB' lookup cursive_attach_W @WB' lookup cursive_attach_W u16F8F;
    pos @W' lookup cursive_attach_W @WB' lookup cursive_attach_W @WB' lookup cursive_attach_W u16F8F;
    pos @W' lookup cursive_attach_W @WB' lookup cursive_attach_W u16F8F;
    pos @W' lookup cursive_attach_W @ASPALLMARKS' @WB' lookup cursive_attach_W @WB' lookup cursive_attach_W @WB' lookup cursive_attach_W u16F8F;
    pos @W' lookup cursive_attach_W @ASPALLMARKS' @WB' lookup cursive_attach_W @WB' lookup cursive_attach_W u16F8F;
    pos @W' lookup cursive_attach_W @ASPALLMARKS' @WB' lookup cursive_attach_W u16F8F;
    # asp + 3 vowels.
    pos @S' lookup cursive_attach_S @SB' lookup cursive_attach_S @SB' lookup cursive_attach_S @SB' lookup cursive_attach_S @SB' lookup cursive_attach_S u16F90;
    pos @S' lookup cursive_attach_S @SB' lookup cursive_attach_S @SB' lookup cursive_attach_S @SB' lookup cursive_attach_S u16F90;
    pos @S' lookup cursive_attach_S @SB' lookup cursive_attach_S @SB' lookup cursive_attach_S u16F90;
    pos @S' lookup cursive_attach_S @SB' lookup cursive_attach_S u16F90;
    pos @S' lookup cursive_attach_S u16F53.mark' @SB' lookup cursive_attach_S @SB' lookup cursive_attach_S @SB' lookup cursive_attach_S u16F90;
    pos @S' lookup cursive_attach_S u16F53.mark' @SB' lookup cursive_attach_S @SB' lookup cursive_attach_S u16F90;
    pos @S' lookup cursive_attach_S u16F53.mark' @SB' lookup cursive_attach_S u16F90;
    pos @S' lookup cursive_attach_S @ASP' lookup cursive_attach_S;
    pos @H @_H' lookup attach_head_L @_H @_H u16F91;
    pos @H @_H' lookup attach_head_L @_H' lookup attach_vowel_HL u16F91;
    pos @H @_H' lookup attach_head_L @_H' lookup attach_vowel_HL u16F91;
    pos @H @VOWEL_DESC' lookup attach_head_D u16F91;
    pos @H @_H' lookup attach_head u16F91;
    pos @L @_L' lookup attach_foot_L @_L @_L u16F92;
    pos @L @_L' lookup attach_foot_L @_L' lookup attach_vowel_LL u16F92;
    pos @L @_L' lookup attach_foot u16F92;
    pos @F' lookup cursive_attach_F @FB' lookup cursive_attach_F;
    pos @SB @ASPMARKS' lookup asp_attach;
    pos @F u16F53.mark' lookup attach_F;
} vowel_attach;

lookup vowel_attach_sfm {
    pos @E' lookup cursive_attach_E @WB' lookup cursive_attach_E @WB' lookup cursive_attach_E @WB' lookup cursive_attach_E u16F8F;
    pos @E' lookup cursive_attach_E @WB' lookup cursive_attach_E @WB' lookup cursive_attach_E u16F8F;
    pos @E' lookup cursive_attach_E @WB' lookup cursive_attach_E u16F8F;
    pos @E' lookup cursive_attach_E @ASPALLMARKS' lookup asp_attach @WB' lookup cursive_attach_E @WB' lookup cursive_attach_E @WB' lookup cursive_attach_E u16F8F;
    pos @E' lookup cursive_attach_E @ASPALLMARKS' lookup asp_attach @WB' lookup cursive_attach_E @WB' lookup cursive_attach_E u16F8F;
    pos @E' lookup cursive_attach_E @ASPALLMARKS' lookup asp_attach @WB' lookup cursive_attach_E u16F8F;
    # asp + 3 vowels.
    pos @S' lookup cursive_attach_S @SB' lookup cursive_attach_S @SB' lookup cursive_attach_S @SB' lookup cursive_attach_S @SB' lookup cursive_attach_S u16F90;
    pos @S' lookup cursive_attach_S @SB' lookup cursive_attach_S @SB' lookup cursive_attach_S @SB' lookup cursive_attach_S u16F90;
    pos @S' lookup cursive_attach_S @SB' lookup cursive_attach_S @SB' lookup cursive_attach_S u16F90;
    pos @S' lookup cursive_attach_S @SB' lookup cursive_attach_S u16F90;
    pos @S' lookup cursive_attach_S u16F53.mark' lookup attach_F @SB' lookup cursive_attach_S @SB' lookup cursive_attach_S @SB' lookup cursive_attach_S u16F90;
    pos @S' lookup cursive_attach_S u16F53.mark' lookup attach_F @SB' lookup cursive_attach_S @SB' lookup cursive_attach_S u16F90;
    pos @S' lookup cursive_attach_S u16F53.mark' lookup attach_F @SB' lookup cursive_attach_S u16F90;
    pos @S' lookup cursive_attach_S @ASP' lookup cursive_attach_S u16F90;
    pos @K' lookup cursive_attach_K @WB' lookup cursive_attach_K @WB' lookup cursive_attach_K @WB' lookup cursive_attach_K u16F92;
    pos @K' lookup cursive_attach_K @WB' lookup cursive_attach_K @WB' lookup cursive_attach_K u16F92;
    pos @K' lookup cursive_attach_K @WB' lookup cursive_attach_K u16F92;
    pos @K' lookup cursive_attach_K @ASPALLMARKS' lookup asp_attach @WB' lookup cursive_attach_K @WB' lookup cursive_attach_K @WB' lookup cursive_attach_K u16F92;
    pos @K' lookup cursive_attach_K @ASPALLMARKS' lookup asp_attach @WB' lookup cursive_attach_K @WB' lookup cursive_attach_K u16F92;
    pos @K' lookup cursive_attach_K @ASPALLMARKS' lookup asp_attach @WB' lookup cursive_attach_K u16F92;
    pos @H @_H' lookup attach_head_L @_H @_H u16F91;
    pos @H @_H' lookup attach_head_L @_H' lookup attach_vowel_HL u16F91;
    pos @H @_H' lookup attach_head_L @_H' lookup attach_vowel_HL u16F91;
    pos @H @VOWEL_DESC' lookup attach_head_D u16F91;
    pos @H @_H' lookup attach_head u16F91;
    pos @F' lookup cursive_attach_F @FB' lookup cursive_attach_F;
    pos @SB @ASPMARKS' lookup asp_attach;
    pos @F u16F53.mark' lookup attach_F;
} vowel_attach_sfm;

lookup headfoot_vowels {
    pos @H' lookup advance_base @_H' lookup left_shift_vowel @_H' lookup attach_vowel_HL @_H' lookup attach_vowel_HL u16F91;
    pos @L' lookup advance_base @_L' lookup left_shift_vowel @_L' lookup attach_vowel_LL @_H' lookup attach_vowel_LL u16F92;
} headfoot_vowels;

lookup asp_hf_attach_right {
    pos @S' lookup cursive_attach_S [@_H @_L] [@_H @_L] [@_H @_L] @MARKTONES @ASP;
    pos @S' lookup cursive_attach_S [@_H @_L] [@_H @_L] @MARKTONES @ASP;
    pos @S' lookup cursive_attach_S [@_H @_L] @MARKTONES @ASP;
    pos @F' lookup cursive_attach_F [@_H @_L] [@_H @_L] [@_H @_L] @MARKTONES u16F53;
    pos @F' lookup cursive_attach_F [@_H @_L] [@_H @_L] @MARKTONES u16F53;
    pos @F' lookup cursive_attach_F [@_H @_L] @MARKTONES u16F53;
} asp_hf_attach_right;

lookup asp_hf_attach_left {
    pos @S [@_H @_L] [@_H @_L] [@_H @_L] @MARKTONES @ASP' lookup cursive_attach_S;
    pos @S [@_H @_L] [@_H @_L] @MARKTONES @ASP' lookup cursive_attach_S;
    pos @S [@_H @_L] @MARKTONES @ASP' lookup cursive_attach_S;
    pos @F [@_H @_L] [@_H @_L] [@_H @_L] @MARKTONES u16F53' lookup cursive_attach_F;
    pos @F [@_H @_L] [@_H @_L] @MARKTONES u16F53' lookup cursive_attach_F;
    pos @F [@_H @_L] @MARKTONES u16F53' lookup cursive_attach_F;
} asp_hf_attach_left;

lookup aspirations {
    pos @W @ASPALLMARKS' lookup asp_attach @WB u16F8F;
    pos @S u16F53.mark' lookup attach_F @SB u16F90;
} aspirations;

lookup space_waist_kern {
do  for w = @W;
    let s = ADVx(w) - APx(w, 'W') + ADVx('u16F51');
    if s > 0;
    {
        pos $w @ASPALLMARKS @WB' <0 0 $s 0> u16F8F;
    }
} space_waist_kern;

lookup vowel_waist_kern {
do  for w = @WB;
    let s = -ADVx(w);
    {
        pos @W @ASPALLMARKS $w' <0 0 $s 0> u16F8F;
    }
} vowel_waist_kern;

feature kern {
  script DFLT;
    language dflt;
        lookup vowel_attach;
        lookup aspirations;
        lookup headfoot_vowels;
        lookup asp_hf_attach_right;
        lookup asp_hf_attach_left;
        lookup space_waist_kern;
        lookup vowel_waist_kern;
    language SFM exclude_dflt;
        lookup vowel_attach_sfm;
        lookup aspirations;
        lookup headfoot_vowels;
        lookup space_waist_kern;
        lookup vowel_waist_kern;
} kern;

table GDEF {
    GlyphClassDef @GDEF_bases, , @GDEF_marks, ;
} GDEF;
